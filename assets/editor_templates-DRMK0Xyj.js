var vt=Object.defineProperty;var wt=(r,t,e)=>t in r?vt(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var v=(r,t,e)=>wt(r,typeof t!="symbol"?t+"":t,e);import{c as nt,d as xt,a as pt,j as kt,l as bt,b as z,o as M,F,r as Q,e as U,n as ut,u as it,B as $t,D as St,f as H,t as st}from"./index-CX7YUebY.js";/**
 * @license lucide-vue-next v0.487.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Ct=nt("circle-minus",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["path",{d:"M8 12h8",key:"1wcyev"}]]);/**
 * @license lucide-vue-next v0.487.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Mt=nt("circle-plus",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["path",{d:"M8 12h8",key:"1wcyev"}],["path",{d:"M12 8v8",key:"napkw2"}]]);/**
 * @license lucide-vue-next v0.487.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const se=nt("search",[["circle",{cx:"11",cy:"11",r:"8",key:"4ej97u"}],["path",{d:"m21 21-4.3-4.3",key:"1qie3q"}]]);class ct{constructor(){v(this,"occupied",new Set);v(this,"curr_head",0)}forward_head(){for(;this.occupied.has(this.curr_head);)this.curr_head+=1}borrow(){return this.curr_head}own(t){return t!==void 0?(this.occupied.add(t),this.forward_head(),t):(this.occupied.add(this.curr_head),t=this.curr_head,this.curr_head+=1,this.forward_head(),t)}free(t){return this.occupied.has(t)?(this.occupied.delete(t),this.curr_head=Math.min(this.curr_head,t),!0):!1}}class ft{constructor(){v(this,"curr_head",0)}own(t){return t!==void 0?(this.curr_head=Math.max(t,this.curr_head),t):(t=this.curr_head,this.curr_head+=1,t)}}function Wt(r,t,e){var ht,lt,dt;const i={spacings:[],conductors:[],layers:[],total_width:0,total_height:0,x_min:0,x_max:0,y_min:0,y_max:0};function o(_,c){switch(c){case"center":return(_.x_left+_.x_right)/2;case"left":return _.x_left;case"right":return _.x_right}}function a(_,c,p){switch(_){case"left":return{x_left:p,x_right:p+c};case"center":return{x_left:p-c/2,x_right:p+c/2};case"right":return{x_left:p-c,x_right:p}}}const d=r.conductors.filter(_=>_.type=="trace"),h={};for(const _ of d)h[_.id]=_;const n=[],g={},l=_=>{n.push(_),g[_.id]=_},f=[],w={},u=(_,c)=>{f.push(c),w[_]=c},m=r.spacings;{e==null||e.begin("trace_layout_horizontal","Layout traces horizontally use widths and spacings");{const p=d[0],y=t(p.width),x={id:p.id,x_left:0,x_right:y};l(x)}let _=0,c=0;for(;!(c>=m.length);){const p=_,y=m[p];_=(_+1)%m.length;const x=y.left_trace.id,$=y.right_trace.id,W=h[x],E=h[$],S=g[x],P=g[$],j=w[p];if(!W)throw Error(`Spacing referenced non existence left trace id ${x}`);if(!E)throw Error(`Spacing referenced non existence right trace id ${$}`);if(S===void 0&&P===void 0)c++;else if(S===void 0&&P!==void 0){const L=t(y.width),Z=t(W.width),tt=o(P,y.right_trace.attach),et=tt-L,at=a(y.left_trace.attach,Z,et);l({id:y.left_trace.id,...at}),u(p,{x_left:et,x_right:tt}),c=0}else if(S!==void 0&&P===void 0){const L=t(y.width),Z=t(E.width),tt=o(S,y.left_trace.attach),et=tt+L,at=a(y.right_trace.attach,Z,et);l({id:y.right_trace.id,...at}),u(p,{x_left:tt,x_right:et}),c=0}else if(S!==void 0&&P!==void 0&&j===void 0){const L=o(S,y.left_trace.attach),Z=o(P,y.right_trace.attach);u(p,{x_left:L,x_right:Z}),c=0}else c++}if(e==null||e.end(),n.length!=d.length)throw Error(`Failed to find x position of all traces. Found ${n.length} but needed ${d.length}`);if(f.length!=m.length)throw Error(`Failed resolve all spacings. Resolved ${f.length} but needed ${m.length}`)}const s=n.reduce((_,c)=>Math.min(_,c.x_left),1/0),k=n.reduce((_,c)=>Math.max(_,c.x_right),0);i.total_width=k-s,i.x_min=s,i.x_max=k,e==null||e.begin("layer_layout_vertical","Layout layers horizontally from heights");const b={},C={};for(const _ of r.conductors){const c=_.position.layer_id;{let p=b[c];p===void 0&&(p=new Set,b[c]=p),p.add(_.position.orientation)}if(_.type=="plane"&&((ht=_.layout)==null?void 0:ht.shrink_trace_layer)!==!1){let p=C[c];p===void 0&&(p={},C[c]=p),p[_.position.orientation]=_}}const B=(_,c)=>{const p=b[_];return p===void 0?!1:p.has(c)},q=(_,c)=>{const p=C[_];if(p!==void 0)return p[c]},A={},O={},Y={},G=_=>{i.layers.push(_),A[_.parent.id]=_};{let _=0;for(const c of r.layers)switch(c.type){case"unmasked":{const p=_,y=q(c.id,c.orientation);if(y)_+=t(y.height);else if(B(c.id,c.orientation)){const $=t(c.trace_height);Y[c.id]=$;const W=t(c.trace_taper);O[c.id]=W,_+=$}G({type:"unmasked",parent:c,bounding_box:{y_start:p,height:_-p},is_copper_plane:y!==void 0});break}case"soldermask":{const p=_;let y=!1;const x=q(c.id,c.orientation);if(x)_+=t(x.height);else{const S=t(c.height);if(y=!0,B(c.id,c.orientation)){const P=t(c.trace_height);Y[c.id]=P;const j=t(c.trace_taper);O[c.id]=j,_+=P,_+=S}else _+=S}const $=_,W={y_start:p,height:$-p};let E;if(y){const S=t(c.height);c.orientation=="up"?E={y_start:p,height:S}:E={y_start:$-S,height:S}}G({type:"soldermask",parent:c,bounding_box:W,mask:E!==void 0?{surface:E,traces:[]}:void 0,is_copper_plane:x!==void 0});break}case"core":{const p=_,y=t(c.height);_+=y,G({type:"core",parent:c,bounding_box:{y_start:p,height:_-p}});break}case"prepreg":{const p=_;let y;const x=q(c.id,"up");if(x){const j=t(x.height);y={y_start:_,height:j},_+=j}else{const j=t(c.trace_height);if(Y[c.id]=j,y={y_start:_,height:j},_+=j,B(c.id,"up")){const L=t(c.trace_taper);O[c.id]=L}}const $=t(c.height),W={y_start:_,height:$};_+=$;let E;const S=q(c.id,"down");if(S){const j=t(S.height);E={y_start:_,height:j},_+=j}else{const j=t(c.trace_height);if(E={y_start:_,height:j},Y[c.id]=j,_+=j,B(c.id,"down")){const L=t(c.trace_taper);O[c.id]=L}}G({type:"prepreg",parent:c,bounding_box:{y_start:p,height:_-p},top:{shape:y,is_copper_plane:x!==void 0},middle_shape:W,bottom:{shape:E,is_copper_plane:S!==void 0}});break}}i.total_height=_,i.y_min=0,i.y_max=_}e==null||e.end(),e==null||e.begin("trace_layout_complete","Layout traces with vertical and horizontal dimensions");const K={},X={},mt=(_,c,p)=>{let y=K[_];y===void 0&&(y={},K[_]=y);let x=y[c];x===void 0&&(x=[],y[c]=x),x.push(p),X[p.parent.id]=p};for(const _ of r.conductors)switch(_.type){case"plane":{const c=_.position.layer_id,p=A[c];if(p===void 0)throw Error(`Plane references missing layer layout id ${c}`);const y=t(_.height),x=p.bounding_box.y_start,$=x+p.bounding_box.height,W=_.position.orientation=="up"?{y_start:x,y_end:x+y}:{y_start:$-y,y_end:$};i.conductors.push({type:"plane",parent:_,shape:{y_start:W.y_start,height:W.y_end-W.y_start}});break}case"trace":{const c=_.position.layer_id,p=A[c];if(p===void 0)throw Error(`Plane references invalid layer layout id ${c}`);const y=g[_.id];if(y===void 0)throw Error(`Trace does not have an x region ${_.id}`);const x=O[c];if(x===void 0)throw Error(`Plane references layer id without trace taper ${c}`);const $=Y[c];if($===void 0)throw Error(`Plane references layer id without trace height ${c}`);const W=p.bounding_box.y_start,E=W+p.bounding_box.height,S=_.position.orientation=="up"?{y_base:W,y_taper:W+$}:{y_base:E,y_taper:E-$},P={type:"trace",parent:_,shape:{x_left:y.x_left,x_right:y.x_right,x_left_taper:y.x_left+x/2,x_right_taper:y.x_right-x/2,...S}};i.conductors.push(P),mt(c,_.position.orientation,P);break}}e==null||e.end(),e==null||e.begin("spacing_layout_complete","Layout spacings with vertical and horizontal dimensions");function _t(_,...c){let p=0,y=1/0;for(const x of c){const $=Math.abs(_-x);$<y&&(p=x,y=$)}return p}for(let _=0;_<r.spacings.length;_++){const c=r.spacings[_],p=w[_];if(p===void 0)throw Error(`Spacing is missing x region ${_}`);const y=X[c.left_trace.id];if(y===void 0)throw Error(`Spacing ${_} is missing left trace layout ${c.left_trace.id}`);const x=X[c.right_trace.id];if(x===void 0)throw Error(`Spacing ${_} is missing right trace layout ${c.right_trace.id}`);const $=y.parent,W=x.parent,E=y.shape,S=x.shape,P=$.position.layer_id==W.position.layer_id?(E.y_base+S.y_base)/2:(E.y_base+E.y_taper+S.y_base+S.y_taper)/4,j=c.left_trace.attach=="center"?_t(P,E.y_base,E.y_taper):E.y_base,L=c.right_trace.attach=="center"?_t(P,S.y_base,S.y_taper):S.y_base;i.spacings.push({parent:c,left_anchor:{x:p.x_left,y:j},right_anchor:{x:p.x_right,y:L},y_mid:P})}e==null||e.end(),e==null||e.begin("soldermask_layout_complete","Layout soldermask with vertical and horizontal dimensions");for(const _ of i.layers.filter(c=>c.type=="soldermask")){const c=_.parent,p=(lt=K[c.id])==null?void 0:lt[c.orientation];if(p===void 0)continue;const y=t(c.height),x=c.orientation=="up"?y:-y;for(const $ of p){const W=$.shape;(dt=_.mask)!=null&&dt.traces&&_.mask.traces.push({...W,y_base:W.y_base+x,y_taper:W.y_taper+x})}}return e==null||e.end(),i}const N=9,zt=12,D={soldermask_height:17,copper_layer_height:10,trace_height:20,trace_taper:15,signal_trace_width:40,ground_trace_width:50,core_height:45,broadside_width_separation:35,signal_width_separation:30,ground_width_separation:30},T=(()=>{const t=N*.6,e=5*2+N*.6;return{min_arm_overhang:5,text_offset:t,center_overhang_margin:e}})();function V(r){return r==null?void 0:r.name}function Et(r){return r==null?void 0:r.taper_suffix}function Bt(){return{stackup_minimum_width:150,stackup_minimum_x_padding:25}}class jt{constructor(t,e){v(this,"layout");v(this,"viewport");v(this,"stackup");v(this,"height_labels",[]);v(this,"width_labels",[]);v(this,"epsilon_labels",[]);v(this,"epsilon_label_x_offset");v(this,"voltage_labels",[]);v(this,"height_label_config");v(this,"conductors",[]);e===void 0&&(e=Bt());const i=Math.max(e.stackup_minimum_x_padding,e.stackup_minimum_width-t.total_width),o=t.x_min-i,d=t.x_max+i-o,h=t.total_height,n=t.y_min,g=23,l=o+N/2,f=d+g,w=t.total_height,u=o-g,m=t.y_min;this.epsilon_label_x_offset=l,this.height_label_config={x_min:o-g,width:g},this.layout=t,this.viewport={width:f,height:w,x_min:u,y_min:m},this.stackup={x_min:o,y_min:n,width:d,height:h},this.create_height_labels(),this.create_copper_traces(),this.create_copper_planes(),this.conductors.sort((s,k)=>s.z_offset-k.z_offset),this.create_spacing_labels(),this.create_epsilon_labels(),this.fit_viewport_to_labels()}create_height_labels(){var a,d;const t={};for(const h of this.layout.conductors.filter(n=>n.type=="trace")){const n=h.parent;if(((a=n.viewer)==null?void 0:a.display)==="none")continue;const g=h.shape.x_left_taper;let l=t[n.position.layer_id];l===void 0&&(l={},t[n.position.layer_id]=l);const f=l[n.position.orientation];(f===void 0||f>g)&&(l[n.position.orientation]=g)}const e=(h,n)=>{var l;const g=(l=t[h])==null?void 0:l[n];return g===void 0?this.stackup.x_min:g-this.stackup.x_min};let i=1/0;for(const h of this.layout.layers)if(h.type!=="unmasked"){i=this.stackup.x_min;break}if(i==1/0)for(const h of this.layout.conductors.filter(n=>n.type=="trace"))((d=h.parent.viewer)==null?void 0:d.display)!=="none"&&(i=Math.min(i,h.shape.x_left));const o=i-this.stackup.x_min;for(const h of this.layout.layers)switch(h.type){case"unmasked":{const n=h.parent,g=V(n.trace_height),l=h.bounding_box.height,f=h.is_copper_plane;if(l>0&&!f&&g){const w=e(n.id,n.orientation);this.height_labels.push({y_offset:h.bounding_box.y_start,height:h.bounding_box.height,overhang_top:n.orientation=="up"?o:w,overhang_bottom:n.orientation=="up"?w:o,text:g})}break}case"soldermask":{const n=h.parent;if(h.mask){const g=h.mask.surface.height,l=V(n.height);if(h.mask.traces.length>0){const f=h.mask.traces[0],w=Math.abs(f.y_base-f.y_taper),u=V(n.trace_height),m=h.bounding_box.y_start,s=e(n.id,n.orientation);n.orientation=="down"?(l&&this.height_labels.push({y_offset:m,height:g,overhang_top:s,overhang_bottom:s,text:l}),u&&this.height_labels.push({y_offset:m+g,height:w,overhang_top:s,overhang_bottom:o,text:u})):(u&&this.height_labels.push({y_offset:m,height:w,overhang_top:o,overhang_bottom:s,text:u}),l&&this.height_labels.push({y_offset:m+w,height:g,overhang_top:s,overhang_bottom:s,text:l}))}else l&&this.height_labels.push({y_offset:h.mask.surface.y_start,height:g,overhang_top:o,overhang_bottom:o,text:l})}break}case"core":{const n=h.parent,g=V(n.height);h.bounding_box.height>0&&g&&this.height_labels.push({y_offset:h.bounding_box.y_start,height:h.bounding_box.height,overhang_top:o,overhang_bottom:o,text:g});break}case"prepreg":{const n=h.parent,g=V(n.trace_height),l=V(n.height);if(!h.top.is_copper_plane&&g){const f=e(n.id,"up");this.height_labels.push({y_offset:h.top.shape.y_start,height:h.top.shape.height,overhang_top:o,overhang_bottom:f,text:g})}if(l&&this.height_labels.push({y_offset:h.middle_shape.y_start,height:h.middle_shape.height,overhang_top:o,overhang_bottom:o,text:l}),!h.bottom.is_copper_plane&&g){const f=e(n.id,"down");this.height_labels.push({y_offset:h.bottom.shape.y_start,height:h.bottom.shape.height,overhang_top:f,overhang_bottom:o,text:g})}break}}}create_inline_width_label(t,e,i,o){const a={offset:{...t},width:e,y_offset_text:0,left_arm_overhang:{top:0,bottom:0},right_arm_overhang:{top:0,bottom:0},text:i};return o?(a.offset.y-=T.min_arm_overhang,a.left_arm_overhang.bottom=T.min_arm_overhang,a.right_arm_overhang.bottom=T.min_arm_overhang,a.left_arm_overhang.top=T.min_arm_overhang,a.right_arm_overhang.top=T.min_arm_overhang,a.y_offset_text=-5.3999999999999995):(a.offset.y+=T.min_arm_overhang,a.left_arm_overhang.top=T.min_arm_overhang,a.right_arm_overhang.top=T.min_arm_overhang,a.left_arm_overhang.bottom=T.min_arm_overhang,a.right_arm_overhang.bottom=T.min_arm_overhang,a.y_offset_text=T.text_offset),a}create_voltage_label(t,e){const i=(t.y_base+t.y_taper)/2,o=(t.x_left+t.x_right)/2;return{y_offset:i,x_offset:o,voltage:e}}create_copper_traces(){var e,i,o,a,d,h;const t={};for(const n of this.layout.layers)switch(n.type){case"core":break;case"soldermask":case"prepreg":case"unmasked":{const g=n.parent,l=Et(g.trace_taper);t[g.id]=l;break}}for(const n of this.layout.conductors.filter(g=>g.type=="trace")){const g=n.shape,l=n.parent,f=((e=l.viewer)==null?void 0:e.display)||"solid",w=((i=l.viewer)==null?void 0:i.z_offset)!==void 0?(o=l.viewer)==null?void 0:o.z_offset:0;if(f=="none")continue;const u=V(l.width);let m=!1;if(u&&((a=l.viewer)==null?void 0:a.is_labeled)!==!1){m=!0;{const k={x:g.x_left,y:g.y_base},b=g.x_right-g.x_left,C=g.y_base<g.y_taper,B=this.create_inline_width_label(k,b,u,C);this.width_labels.push(B)}const s=t[l.position.layer_id];if(s){const k={x:g.x_left_taper,y:g.y_taper},b=g.x_right_taper-g.x_left_taper,C=g.y_base>g.y_taper,B=this.create_inline_width_label(k,b,`${u}${s}`,C);this.width_labels.push(B)}}if(f=="solid"){const s=this.create_voltage_label(g,l.voltage);this.voltage_labels.push(s)}this.conductors.push({type:"trace",id:l.id,shape:n.shape,is_selectable:f=="selectable",is_labeled:m,group_tag:(d=l.viewer)==null?void 0:d.group_tag,on_click:(h=l.viewer)==null?void 0:h.on_click,z_offset:w})}}create_copper_planes(){var t,e,i,o;for(const a of this.layout.conductors.filter(d=>d.type=="plane")){const d=a.parent,h=((t=d.viewer)==null?void 0:t.display)||"solid",n=((e=d.viewer)==null?void 0:e.z_offset)!==void 0?(i=d.viewer)==null?void 0:i.z_offset:0;h!=="none"&&this.conductors.push({type:"plane",shape:a.shape,on_click:(o=d.viewer)==null?void 0:o.on_click,is_selectable:h==="selectable",z_offset:n})}}create_spacing_labels(){var i;const t={};for(const o of this.layout.conductors.filter(a=>a.type=="trace")){const a=o.parent;t[a.id]=a.position.orientation}const e={};for(const o of this.conductors.filter(a=>a.type=="trace"))e[o.id]=o;for(const o of this.layout.spacings){const a=o.parent;if(((i=a.viewer)==null?void 0:i.is_display)===!1)continue;const d=a.left_trace.id,h=a.right_trace.id,n=e[d],g=e[h];if(!n||!g)continue;const l=V(a.width);if(!l)continue;const f=o.y_mid,w=o.left_anchor,u=o.right_anchor;if(Math.abs(w.y-u.y)<.001){const k=t[d]=="up",b={x:w.x,y:f},C=u.x-w.x,B=this.create_inline_width_label(b,C,l,k);this.width_labels.push(B)}else{const s=f-w.y,k=f-u.y,b=a.left_trace.attach=="center"&&n.is_labeled?T.center_overhang_margin:0,C=a.right_trace.attach=="center"&&g.is_labeled?T.center_overhang_margin:0;this.width_labels.push({offset:{x:w.x,y:f},width:u.x-w.x,mask_out_width:l.length*N,y_offset_text:0,left_arm_overhang:{top:Math.max(s-b,T.min_arm_overhang),bottom:Math.max(-s-b,T.min_arm_overhang)},right_arm_overhang:{top:Math.max(k-C,T.min_arm_overhang),bottom:Math.max(-k-C,T.min_arm_overhang)},text:l})}}}create_epsilon_labels(){var t;for(const e of this.layout.layers)switch(e.type){case"unmasked":break;case"soldermask":{const i=(t=e.mask)==null?void 0:t.surface,o=V(e.parent.epsilon);if(i&&o){const a=i.y_start,d=a+i.height,h=(a+d)/2;this.epsilon_labels.push({y_offset:h,text:o})}break}case"core":case"prepreg":{const i=e.bounding_box,o=V(e.parent.epsilon);if(o){const a=i.y_start,d=a+i.height,h=(a+d)/2;this.epsilon_labels.push({y_offset:h,text:o})}break}}}fit_viewport_to_labels(){let t=1/0,e=-1/0,i=1/0,o=-1/0;for(const a of this.width_labels){const d=a.offset.x,h=d+a.width,n=a.offset.y+Math.max(a.left_arm_overhang.top,a.right_arm_overhang.top),g=a.offset.y+Math.max(a.left_arm_overhang.bottom,a.right_arm_overhang.bottom),l=a.offset.y+a.y_offset_text,f=l-N*.5,w=l+N*.5;t=Math.min(t,d,h),e=Math.max(e,d,h),i=Math.min(i,n,g,f),o=Math.max(o,n,g,w)}this.fit_viewport_to_bounds(t,e,i,o)}fit_viewport_to_bounds(t,e,i,o){const a=Math.max(0,this.viewport.x_min-t),d=Math.max(0,e-this.viewport.width+this.viewport.x_min),h=Math.max(0,this.viewport.y_min-i),n=Math.max(0,o-this.viewport.height+this.viewport.y_min);this.viewport.x_min-=a,this.viewport.y_min-=h,this.viewport.width+=a+d,this.viewport.height+=h+n}}class rt{constructor(t){v(this,"cache",new Map);v(this,"ctor");this.ctor=t}get(t){let e=this.cache.get(t);return e!==void 0||(e=this.ctor(t),this.cache.set(t,e)),e}for_each(t){for(const e of this.cache.values())t(e)}}class ne{constructor(){v(this,"id_to_index",{});v(this,"required_trace_widths",new Set);v(this,"required_trace_tapers",new Set);v(this,"minimum_feature_size",.001);v(this,"dW");v(this,"T");v(this,"SH");v(this,"H");v(this,"ER");v(this,"PH");v(this,"W");v(this,"CW");v(this,"S");v(this,"B");v(this,"CS");this.dW=new rt(t=>({type:"taper",parent:this,get name(){return`dW${this.parent.get_index(t)}`},description:"Trace taper",get taper_suffix(){return`${this.parent.get_index(t)}`},min:0,get max(){let e=1/0;for(const i of this.parent.required_trace_widths)i.value!==void 0&&(e=Math.min(e,i.value));if(e!=1/0)return e},value:0,placeholder_value:D.trace_taper,impedance_correlation:"positive"})),this.T=new rt(t=>({type:"size",parent:this,get name(){return`T${this.parent.get_index(t)}`},description:"Trace thickness",get min(){return this.parent.minimum_feature_size},value:.035,placeholder_value:D.trace_height,impedance_correlation:"negative"})),this.SH=new rt(t=>({type:"size",parent:this,get name(){return`H${this.parent.get_index(t)}`},description:"Soldermask thickness",get min(){return this.parent.minimum_feature_size},value:.015,placeholder_value:D.soldermask_height,impedance_correlation:"negative"})),this.H=new rt(t=>({type:"size",parent:this,get name(){return`H${this.parent.get_index(t)}`},description:"Dielectric height",get min(){return this.parent.minimum_feature_size},value:.15,placeholder_value:D.core_height,impedance_correlation:"positive"})),this.ER=new rt(t=>({type:"epsilon",parent:this,get name(){return`ER${this.parent.get_index(t)}`},description:"Dielectric constant",min:1,value:4.1,impedance_correlation:"negative"})),this.PH={type:"size",value:.1,placeholder_value:D.copper_layer_height},this.W={parent:this,type:"size",name:"W",description:"Trace width",get min(){let t=0;for(const i of this.parent.required_trace_tapers)i.value!==void 0&&(t=Math.max(t,i.value));const e=this.parent.minimum_feature_size;return Math.max(e,t)},value:.25,placeholder_value:D.signal_trace_width,impedance_correlation:"negative"},this.CW={parent:this,type:"size",name:"CW",description:"Coplanar ground width",get min(){let t=0;for(const i of this.parent.required_trace_tapers)i.value!==void 0&&(t=Math.max(t,i.value));const e=this.parent.minimum_feature_size;return Math.max(e,t)},value:.25,placeholder_value:D.ground_trace_width,impedance_correlation:"negative"},this.S={parent:this,type:"size",name:"S",description:"Signal separation",get min(){return this.parent.minimum_feature_size},value:.25,placeholder_value:D.signal_width_separation,impedance_correlation:"positive"},this.B={parent:this,type:"size",name:"BS",description:"Broadside separation",min:0,value:0,placeholder_value:D.broadside_width_separation,impedance_correlation:"positive"},this.CS={parent:this,type:"size",name:"CS",description:"Coplanar ground separation",get min(){return this.parent.minimum_feature_size},value:.25,placeholder_value:D.ground_width_separation,impedance_correlation:"positive"}}get_index(t){const e=this.id_to_index[t];if(e===void 0)throw Error(`Failed to get layer index of layer id ${t}`);return e}for_each(t){this.dW.for_each(t),this.T.for_each(t),this.SH.for_each(t),this.H.for_each(t),this.ER.for_each(t),t(this.PH),t(this.W),t(this.CW),t(this.S),t(this.B),t(this.CS)}}const I={can_layer_contain_conductor_orientation(r,t){switch(r.type){case"core":return!1;case"prepreg":return!0;case"unmasked":return r.orientation==t;case"soldermask":return r.orientation==t}},will_layer_leave_conductors_floating(r,t){for(const e of t)if(this.is_conductor_in_layer(r,e)&&!this.can_layer_contain_conductor_orientation(r,e.position.orientation))return!0;return!1},is_conductor_in_layer(r,t,e){return r.id!=t.position.layer_id?!1:e===void 0?!0:t.position.orientation==e},are_some_conductors_in_layer(r,t){for(const e of t)if(I.is_conductor_in_layer(r,e))return!0;return!1},is_shorting(r,t,e){if(!(t&&e))return!1;let i=!1,o=!1;if(t){for(const a of r)if(this.is_conductor_in_layer(t,a,"down")){i=!0;break}}if(e){for(const a of r)if(this.is_conductor_in_layer(e,a,"up")){o=!0;break}}return i&&o},can_layer_support_adjacent_layer(r,t){switch(r.type){case"core":return!0;case"prepreg":return!0;case"unmasked":return r.orientation==t;case"soldermask":return r.orientation==t}}},R={core(r,t){return{type:"core",id:t,height:r.H.get(t),epsilon:r.ER.get(t)}},prepreg(r,t){return{type:"prepreg",id:t,height:r.H.get(t),epsilon:r.ER.get(t),trace_height:r.T.get(t),trace_taper:r.dW.get(t)}},soldermask(r,t,e){return{type:"soldermask",id:t,height:r.SH.get(t),epsilon:r.ER.get(t),trace_height:r.T.get(t),trace_taper:r.dW.get(t),orientation:e}},unmasked(r,t,e){return{type:"unmasked",id:t,trace_height:r.T.get(t),trace_taper:r.dW.get(t),orientation:e}},with_type(r,t,e,i){switch(t){case"core":return this.core(r,e);case"prepreg":return this.prepreg(r,e);case"soldermask":return this.soldermask(r,e,i);case"unmasked":return this.unmasked(r,e,i)}}};function J(r,t){return{type:"plane",position:t,height:r.PH,voltage:"ground"}}class yt{constructor(t){v(this,"layers",[]);v(this,"layer_id",new ct);v(this,"parameters");v(this,"plane_conductors",[]);this.parameters=t}get_adjacent_layers(t){const e=this.layers.length,i=t>0?this.layers[t-1]:void 0,o=t<e-1?this.layers[t+1]:void 0;return[i,o]}regenerate_layer_id_to_index(){for(let t=0;t<this.layers.length;t++){const e=this.layers[t];this.parameters.id_to_index[e.id]=t}}regenerate_trace_parameter_constraints(){this.parameters.required_trace_widths.clear(),this.parameters.required_trace_tapers.clear();for(const t of this.get_sim_conductors())t.type=="trace"&&(this.parameters.required_trace_widths.add(t.width),this.parameters.required_trace_tapers.add(this.parameters.dW.get(t.position.layer_id)))}try_add_prepreg_layer(t){const e=t>0?this.layers[t-1]:void 0,i=t<this.layers.length?this.layers[t]:void 0;if(e&&!I.can_layer_support_adjacent_layer(e,"down")||i&&!I.can_layer_support_adjacent_layer(i,"up"))return;const o=R.prepreg(this.parameters,this.layer_id.borrow());return()=>{this.layers.splice(t,0,o),this.layer_id.own(o.id),this.regenerate_layer_id_to_index()}}try_change_layer_type(t,e){const i=this.layers[t],[o,a]=this.get_adjacent_layers(t),d=t==0?"down":"up",h=R.with_type(this.parameters,e,i.id,d);if(o&&!I.can_layer_support_adjacent_layer(h,"up")||a&&!I.can_layer_support_adjacent_layer(h,"down"))return;const n=this.get_sim_conductors();if(!I.is_shorting(n,o,h)&&!I.is_shorting(n,h,a)&&!I.will_layer_leave_conductors_floating(h,n))return()=>{this.layers.splice(t,1,h),this.regenerate_layer_id_to_index()}}try_delete_layer(t){const[e,i]=this.get_adjacent_layers(t),o=this.layers[t];if(this.layers.length<=1)return;const a=this.get_sim_conductors();if(!I.are_some_conductors_in_layer(o,a)&&!(e&&i&&(I.is_shorting(a,e,i)||!I.can_layer_support_adjacent_layer(e,"down")||!I.can_layer_support_adjacent_layer(i,"up"))))return()=>{this.layers.splice(t,1),this.layer_id.free(o.id),this.regenerate_layer_id_to_index()}}remove_plane(t){const e=this.plane_conductors.findIndex(i=>i.position.layer_id==t.layer_id&&i.position.orientation==t.orientation);e>=0&&this.plane_conductors.splice(e,1)}hide_spacing(t){return t.viewer===void 0&&(t.viewer={}),t.viewer.is_display=!1,t}make_plane_removable(t){return t.grid={override_total_divisions:1},t.viewer={on_click:()=>this.remove_plane(t.position)},t}make_plane_selectable(t){return t.viewer={is_labeled:!1,display:"selectable",on_click:()=>{const e=J(this.parameters,t.position);this.plane_conductors.push(e)}},t.layout={shrink_trace_layer:!1},t}make_trace_selectable(t,e,i){return t.viewer={...t.viewer,is_labeled:!1,display:"selectable",on_click:i,group_tag:e},t}}class ce extends yt{constructor(e,i,o){super(e);v(this,"trace_ids",new ct);v(this,"trace");v(this,"trace_template");this.trace_template=i;const{layers:a,plane_conductors:d,trace_position:h}=o.create(this.parameters,this.layer_id);this.layers=a,this.plane_conductors=d,this.regenerate_layer_id_to_index(),this.trace=this.trace_template.create(this.parameters,h,this.trace_ids),this.regenerate_trace_parameter_constraints()}set_trace_template(e){this.trace_template=e;for(const i of this.trace.conductors)this.trace_ids.free(i.id);this.trace=this.trace_template.create(this.parameters,this.trace.position,this.trace_ids),this.regenerate_trace_parameter_constraints()}get_sim_conductors(){return[...this.trace.conductors,...this.plane_conductors]}get_sim_spacings(){return this.trace.spacings}get_simulation_stackup(){const e=this.get_sim_conductors(),i=this.get_sim_spacings();return{layers:this.layers,spacings:i,conductors:e}}make_colinear_trace_conductors_selectable(e){const i=`${e.position.layer_id}_${e.position.orientation}`;for(const o of e.conductors)this.make_trace_selectable(o,i,()=>{for(const d of this.trace.conductors)this.trace_ids.free(d.id);const a=this.trace_template.create(this.parameters,o.position,this.trace_ids);this.trace=a,this.regenerate_trace_parameter_constraints()});for(const o of e.spacings)this.hide_spacing(o)}create_parallel_spacing(e,i){return{left_trace:{id:e,attach:"left"},right_trace:{id:i,attach:"left"},width:{type:"size",placeholder_value:0}}}get_viewer_stackup(){const e=this.get_sim_conductors(),i=this.get_sim_spacings(),o=[],a=[];for(let l of e)l.type=="plane"&&(l=this.make_plane_removable({...l})),o.push(l);for(const l of i)a.push(l);const d={};for(const l of e){const{layer_id:f,orientation:w}=l.position;let u=d[f];u===void 0&&(u=new Set,d[f]=u),u.add(w)}const h=(l,f)=>{const w=d[l];return w===void 0?!1:w.has(f)},n=new ft;n.curr_head=this.trace_ids.borrow();const g=["up","down"];for(let l=0;l<this.layers.length;l++){const f=this.layers[l],[w,u]=this.get_adjacent_layers(l),m=s=>I.is_shorting(s,w,f)||I.is_shorting(s,f,u);for(const s of g){if(h(f.id,s)||!I.can_layer_contain_conductor_orientation(f,s))continue;const k={layer_id:f.id,orientation:s},b=this.trace_template.create(this.parameters,k,n);if(!m([...b.conductors,...this.plane_conductors])){this.make_colinear_trace_conductors_selectable(b);for(const q of b.conductors)o.push(q);for(const q of b.spacings)a.push(q);const B=this.create_parallel_spacing(this.trace.conductors[0].id,b.conductors[0].id);this.hide_spacing(B),a.push(B)}const C=J(this.parameters,k);m([...e,C])||(this.make_plane_selectable(C),o.push(C))}}return{layers:this.layers,conductors:o,spacings:a}}}class _e extends yt{constructor(e,i,o){super(e);v(this,"trace_ids",new ct);v(this,"left");v(this,"right");v(this,"broadside_spacing");v(this,"trace_template");this.trace_template=i;const{layers:a,plane_conductors:d,left_trace_position:h,right_trace_position:n}=o.create(this.parameters,this.layer_id);this.layers=a,this.plane_conductors=d,this.regenerate_layer_id_to_index(),this.left=this.trace_template.create_left(this.parameters,h,this.trace_ids),this.right=this.trace_template.create_right(this.parameters,n,this.trace_ids),this.broadside_spacing=this.create_broadside_spacing(this.left.root.id,this.right.root.id),this.regenerate_trace_parameter_constraints()}set_trace_template(e){this.trace_template=e;const i=this.left.position,o=this.right.position;this.left=this.trace_template.create_left(this.parameters,i,this.trace_ids),this.right=this.trace_template.create_right(this.parameters,o,this.trace_ids),this.broadside_spacing=this.create_broadside_spacing(this.left.root.id,this.right.root.id),this.regenerate_trace_parameter_constraints()}create_broadside_spacing(e,i){return{left_trace:{id:e,attach:"center"},right_trace:{id:i,attach:"center"},width:this.parameters.B}}get_sim_conductors(){return[...this.left.conductors,...this.right.conductors,...this.plane_conductors]}get_sim_spacings(){return[...this.left.spacings,this.broadside_spacing,...this.right.spacings]}get_simulation_stackup(){const e=this.get_sim_conductors(),i=this.get_sim_spacings();return{layers:this.layers,spacings:i,conductors:e}}make_left_trace_selectable(e){const i=`${e.position.layer_id}_${e.position.orientation}_left`;for(const o of e.conductors)this.make_trace_selectable(o,i,()=>{for(const h of this.left.conductors)this.trace_ids.free(h.id);const a=this.trace_template.create_left(this.parameters,e.position,this.trace_ids),d=this.create_broadside_spacing(a.root.id,this.right.root.id);this.left=a,this.broadside_spacing=d,this.regenerate_trace_parameter_constraints()});for(const o of e.spacings)this.hide_spacing(o)}make_right_trace_selectable(e){const i=`${e.position.layer_id}_${e.position.orientation}_right`;for(const o of e.conductors)this.make_trace_selectable(o,i,()=>{for(const h of this.right.conductors)this.trace_ids.free(h.id);const a=this.trace_template.create_right(this.parameters,e.position,this.trace_ids),d=this.create_broadside_spacing(this.left.root.id,a.root.id);this.right=a,this.broadside_spacing=d,this.regenerate_trace_parameter_constraints()});for(const o of e.spacings)this.hide_spacing(o)}get_viewer_stackup(){const e=this.get_sim_conductors(),i=this.get_sim_spacings(),o=[],a=[];for(let l of e)l.type=="plane"&&(l=this.make_plane_removable({...l})),o.push(l);for(const l of i)a.push(l);const d={};for(const l of e){const{layer_id:f,orientation:w}=l.position;let u=d[f];u===void 0&&(u=new Set,d[f]=u),u.add(w)}const h=(l,f)=>{const w=d[l];return w===void 0?!1:w.has(f)},n=new ft;n.curr_head=this.trace_ids.borrow();const g=["up","down"];for(let l=0;l<this.layers.length;l++){const f=this.layers[l],[w,u]=this.get_adjacent_layers(l),m=s=>I.is_shorting(s,w,f)||I.is_shorting(s,f,u);for(const s of g){if(h(f.id,s)||!I.can_layer_contain_conductor_orientation(f,s))continue;const k={layer_id:f.id,orientation:s},b=this.trace_template.create_left(this.parameters,k,n);if(!m([...b.conductors,...this.right.conductors,...this.plane_conductors])){this.make_left_trace_selectable(b);for(const A of b.conductors)o.push(A);for(const A of b.spacings)a.push(A);const q=this.create_broadside_spacing(b.root.id,this.right.root.id);this.hide_spacing(q),a.push(q)}const C=this.trace_template.create_right(this.parameters,k,n);if(!m([...C.conductors,...this.left.conductors,...this.plane_conductors])){this.make_right_trace_selectable(C);for(const A of C.conductors)o.push(A);for(const A of C.spacings)a.push(A);const q=this.create_broadside_spacing(this.left.root.id,C.root.id);this.hide_spacing(q),a.push(q)}const B=J(this.parameters,k);m([...e,B])||(this.make_plane_selectable(B),o.push(B))}}return{layers:this.layers,conductors:o,spacings:a}}}const Ht=(r,t)=>{const e=r.__vccOpts||r;for(const[i,o]of t)e[i]=o;return e},It=["viewBox"],qt=["points","fill","stroke","stroke-width"],Pt=["x","y","width","height","fill","stroke","stroke-width"],Tt=["x","y","width","height","fill","stroke","stroke-width"],At=["points","fill","stroke","stroke-width","onClick","onMouseenter","onMouseleave","group_tag"],Rt=["x","y","width","height","fill","stroke","stroke-width","onClick"],Lt=["transform"],Ft=["transform"],Dt=["x2","stroke","stroke-width","stroke-dasharray"],Vt=["x2","y1","y2","stroke","stroke-width","stroke-dasharray"],Nt=["y","font-size"],Ot=["transform"],Yt=["y2"],Gt=["transform"],Jt=["transform"],Kt=["y1","y2","stroke","stroke-width","stroke-dasharray"],Qt=["x1","x2","y1","y2","stroke","stroke-width","stroke-dasharray"],Ut=["x","y","font-size"],Xt=["x2","stroke","stroke-width"],Zt=["x1","x2","stroke","stroke-width"],te=["x2","stroke","stroke-width"],ee=["transform"],re=["x","y","font-size"],ot=.5,ie=xt({__name:"StackupViewer",props:{stackup:{},config:{}},setup(r){const t=r,e=pt(()=>{const u=k=>k.placeholder_value,m=Wt(t.stackup,u);return new jt(m,t.config)}),i=kt(new Set);function o(u){u!==void 0&&i.value.add(u)}function a(u){u!==void 0&&i.value.delete(u)}function d(u){return u===void 0?!1:i.value.has(u)}bt(e,()=>{i.value.clear()});const h={copper:"#eacc2d",dielectric_soldermask:"#00aa00",dielectric_prepreg:"#55cc33",dielectric_core:"#88ed44"},n={outline_colour:"#00000040",outline_width:.5,arm_colour:"#000000",arm_width:.5,arm_dash_array:"2,2",line_colour:"#000000",line_width:.5};function g(u){return u.map(({x:m,y:s})=>`${m},${s}`).join(" ")}function l(u){return[{x:u.x_left,y:u.y_base},{x:u.x_left_taper,y:u.y_taper},{x:u.x_right_taper,y:u.y_taper},{x:u.x_right,y:u.y_base}]}const f=u=>{const m=u.mask,s=[];if(m===void 0)return s;const k=u.parent.orientation,b=m.surface.y_start,C=b+m.surface.height,B=k=="up"?C:b,q=k=="up"?b:C,A=e.value.stackup.x_min,O=A+e.value.stackup.width;s.push({x:A,y:q}),s.push({x:A,y:B});const Y=[...m.traces];Y.sort((G,K)=>G.x_left-K.x_left);for(const G of Y){const K=l(G);for(const X of K)s.push(X)}return s.push({x:O,y:B}),s.push({x:O,y:q}),s},w=pt(()=>e.value.voltage_labels.filter(u=>u.voltage!=="ground").map(u=>{let m;switch(u.voltage){case"ground":break;case"negative":m=Ct;break;case"positive":m=Mt;break}return{x:u.x_offset,y:u.y_offset,icon:m}}));return(u,m)=>(M(),z("svg",{version:"1.1",xmlns:"http://www.w3.org/2000/svg",viewBox:`
    ${e.value.viewport.x_min-ot} ${e.value.viewport.y_min-ot}
    ${e.value.viewport.width+ot*2} ${e.value.viewport.height+ot*2}
  `,preserveAspectRatio:"xMidYMid meet",class:"w-full"},[(M(!0),z(F,null,Q(e.value.layout.layers,(s,k)=>(M(),z(F,{key:k},[s.type=="soldermask"?(M(),z(F,{key:0},[s.mask?(M(),z("polygon",{key:0,points:g(f(s)),fill:h.dielectric_soldermask,stroke:n.outline_colour,"stroke-width":n.outline_width},null,8,qt)):U("",!0)],64)):U("",!0),s.type=="core"?(M(),z("rect",{key:1,x:e.value.stackup.x_min,y:s.bounding_box.y_start,width:e.value.stackup.width,height:s.bounding_box.height,fill:h.dielectric_core,stroke:n.outline_colour,"stroke-width":n.outline_width},null,8,Pt)):U("",!0),s.type=="prepreg"?(M(),z("rect",{key:2,x:e.value.stackup.x_min,y:s.bounding_box.y_start,width:e.value.stackup.width,height:s.bounding_box.height,fill:h.dielectric_prepreg,stroke:n.outline_colour,"stroke-width":n.outline_width},null,8,Tt)):U("",!0)],64))),128)),(M(!0),z(F,null,Q(e.value.conductors,(s,k)=>(M(),z(F,{key:k},[s.type==="trace"?(M(),z("polygon",{key:0,class:ut(`
          ${s.is_selectable?"trace-selectable":""}
          ${s.on_click?"trace-clickable":""}
          ${d(s.group_tag)?"trace-selectable-group-hover":""}
        `),points:g(l(s.shape)),fill:h.copper,stroke:n.outline_colour,"stroke-width":n.outline_width,onClick:()=>{var b;return(b=s.on_click)==null?void 0:b.call(s)},onMouseenter:()=>o(s.group_tag),onMouseleave:()=>a(s.group_tag),group_tag:s.group_tag},null,42,At)):s.type==="plane"?(M(),z("rect",{key:1,class:ut(`
          ${s.is_selectable?"trace-selectable":""}
          ${s.on_click?"trace-clickable":""}
        `),x:e.value.stackup.x_min,y:s.shape.y_start,width:e.value.stackup.width,height:s.shape.height,fill:h.copper,stroke:n.outline_colour,"stroke-width":n.outline_width,onClick:()=>{var b;return(b=s.on_click)==null?void 0:b.call(s)}},null,10,Rt)):U("",!0)],64))),128)),(M(!0),z(F,null,Q(w.value,(s,k)=>(M(),z(F,{key:k},[s.icon!==void 0?(M(),z("g",{key:0,transform:`translate(${s.x},${s.y}) scale(${it(zt)})`},[(M(),$t(St(s.icon),{x:"-0.5",y:"-0.5",width:"1",height:"1",stroke:"black"}))],8,Lt)):U("",!0)],64))),128)),(M(!0),z(F,null,Q(e.value.height_labels,(s,k)=>(M(),z("g",{key:k,transform:`translate(${e.value.height_label_config.x_min},${s.y_offset})`},[H("line",{x1:"0",x2:e.value.height_label_config.width+s.overhang_top,y1:"0",y2:"0",stroke:n.arm_colour,"stroke-width":n.arm_width,"stroke-dasharray":n.arm_dash_array},null,8,Dt),H("line",{x1:"0",x2:e.value.height_label_config.width+s.overhang_bottom,y1:s.height,y2:s.height,stroke:n.arm_colour,"stroke-width":n.arm_width,"stroke-dasharray":n.arm_dash_array},null,8,Vt),H("text",{x:"1",y:s.height/2,"font-size":it(N),"font-weight":"500","alignment-baseline":"central"},st(s.text),9,Nt),H("g",{transform:`translate(${e.value.height_label_config.width-5},0)`},[H("line",{x1:"0",x2:"0",y1:2,y2:s.height-2,stroke:"#000000","stroke-width":"0.5"},null,8,Yt),m[1]||(m[1]=H("g",{transform:"translate(0,2)"},[H("polygon",{points:"-2,2 0,-2 2,2",fill:"#000000"})],-1)),H("g",{transform:`translate(0,${s.height-2}) scale(1,-1)`},m[0]||(m[0]=[H("polygon",{points:"-2,2 0,-2 2,2",fill:"#000000"},null,-1)]),8,Gt)],8,Ot)],8,Ft))),128)),(M(!0),z(F,null,Q(e.value.width_labels,(s,k)=>(M(),z("g",{key:k,transform:`translate(${s.offset.x}, ${s.offset.y})`},[H("line",{x1:"0",x2:"0",y1:s.left_arm_overhang.bottom,y2:-s.left_arm_overhang.top,stroke:n.arm_colour,"stroke-width":n.arm_width,"stroke-dasharray":n.arm_dash_array},null,8,Kt),H("line",{x1:s.width,x2:s.width,y1:s.right_arm_overhang.bottom,y2:-s.right_arm_overhang.top,stroke:n.arm_colour,"stroke-width":n.arm_width,"stroke-dasharray":n.arm_dash_array},null,8,Qt),H("text",{x:s.width/2,y:s.y_offset_text,"font-size":it(N),"text-anchor":"middle","font-weight":"500","alignment-baseline":"central"},st(s.text),9,Ut),H("g",null,[s.mask_out_width?(M(),z(F,{key:0},[H("line",{x1:"0",x2:s.width/2-s.mask_out_width/2,y1:"0",y2:"0",stroke:n.line_colour,"stroke-width":n.line_width},null,8,Xt),H("line",{x1:s.width/2+s.mask_out_width/2,x2:s.width,y1:"0",y2:"0",stroke:n.line_colour,"stroke-width":n.line_width},null,8,Zt)],64)):(M(),z("line",{key:1,x1:"0",x2:s.width,y1:"0",y2:"0",stroke:n.line_colour,"stroke-width":n.line_width},null,8,te)),m[3]||(m[3]=H("g",{transform:"translate(2,0)"},[H("polygon",{points:"-2,0 2,2 2,-2",fill:"#000000"})],-1)),H("g",{transform:`translate(${s.width-2},0) scale(1,-1)`},m[2]||(m[2]=[H("polygon",{points:"2,0 -2,2 -2,-2",fill:"#000000"},null,-1)]),8,ee)])],8,Jt))),128)),(M(!0),z(F,null,Q(e.value.epsilon_labels,(s,k)=>(M(),z("text",{key:k,x:e.value.epsilon_label_x_offset,y:s.y_offset,"font-size":it(N),"font-weight":"500","alignment-baseline":"central"},st(s.text),9,re))),128))],8,It))}}),he=Ht(ie,[["__scopeId","data-v-812826a7"]]),le={pair:{create(r,t,e){const i=Array.from({length:2},d=>e.own()),o=[{type:"trace",id:i[0],position:t,width:r.W,voltage:"positive"},{type:"trace",id:i[1],position:t,width:r.W,voltage:"negative"}],a=[{left_trace:{id:i[0],attach:"right"},right_trace:{id:i[1],attach:"left"},width:r.S}];return{position:t,conductors:o,spacings:a}}},"coplanar pair":{create(r,t,e){const i=Array.from({length:4},d=>e.own()),o=[{type:"trace",id:i[0],position:t,width:r.CW,voltage:"ground"},{type:"trace",id:i[1],position:t,width:r.W,voltage:"positive"},{type:"trace",id:i[2],position:t,width:r.W,voltage:"negative"},{type:"trace",id:i[3],position:t,width:r.CW,voltage:"ground"}],a=[{left_trace:{id:i[0],attach:"right"},right_trace:{id:i[1],attach:"left"},width:r.CS},{left_trace:{id:i[1],attach:"right"},right_trace:{id:i[2],attach:"left"},width:r.S},{left_trace:{id:i[2],attach:"right"},right_trace:{id:i[3],attach:"left"},width:r.CS}];return{position:t,conductors:o,spacings:a}}},"single ended":{create(r,t,e){const o=[{type:"trace",id:Array.from({length:1},d=>e.own())[0],position:t,width:r.W,voltage:"positive"}];return{position:t,conductors:o,spacings:[]}}},"coplanar single ended":{create(r,t,e){const i=Array.from({length:3},d=>e.own()),o=[{type:"trace",id:i[0],position:t,width:r.CW,voltage:"ground"},{type:"trace",id:i[1],position:t,width:r.W,voltage:"positive"},{type:"trace",id:i[2],position:t,width:r.CW,voltage:"ground"}],a=[{left_trace:{id:i[0],attach:"right"},right_trace:{id:i[1],attach:"left"},width:r.CS},{left_trace:{id:i[1],attach:"right"},right_trace:{id:i[2],attach:"left"},width:r.CS}];return{position:t,conductors:o,spacings:a}}}},de={microstrip:{create(r,t){const e=R.soldermask(r,t.own(),"down"),i=R.core(r,t.own()),o=R.unmasked(r,t.own(),"up"),a=J(r,{layer_id:o.id,orientation:o.orientation});return{layers:[e,i,o],plane_conductors:[a],trace_position:{layer_id:e.id,orientation:e.orientation}}}},stripline:{create(r,t){const e=R.prepreg(r,t.own()),i=R.core(r,t.own()),o=R.unmasked(r,t.own(),"up"),a=J(r,{layer_id:e.id,orientation:"up"}),d=J(r,{layer_id:o.id,orientation:o.orientation});return{layers:[e,i,o],plane_conductors:[a,d],trace_position:{layer_id:e.id,orientation:"down"}}}}},pe={microstrip:{create(r,t){const e=R.soldermask(r,t.own(),"down"),i=R.core(r,t.own()),o=R.soldermask(r,t.own(),"up");return{layers:[e,i,o],plane_conductors:[],left_trace_position:{layer_id:e.id,orientation:e.orientation},right_trace_position:{layer_id:o.id,orientation:o.orientation}}}},stripline:{create(r,t){const e=R.prepreg(r,t.own()),i=R.core(r,t.own()),o=R.prepreg(r,t.own()),a=J(r,{layer_id:e.id,orientation:"up"}),d=J(r,{layer_id:o.id,orientation:"down"});return{layers:[e,i,o],plane_conductors:[a,d],left_trace_position:{layer_id:e.id,orientation:"down"},right_trace_position:{layer_id:o.id,orientation:"up"}}}}};function gt(r){if(r!=="positive"&&r!=="negative")throw Error(`Cannot get the opposite voltage for ${r}`);return r=="positive"?"negative":"positive"}const ue={pair:{create_traces(r,t,e,i){const a=[{type:"trace",id:Array.from({length:1},n=>i.own())[0],position:t,width:r.W,voltage:e}],d=a[0];return{position:t,root:d,conductors:a,spacings:[]}},create_left(r,t,e){return this.create_traces(r,t,"positive",e)},create_right(r,t,e){return this.create_traces(r,t,"negative",e)}},"coplanar pair":{create_traces(r,t,e,i){const o=Array.from({length:3},n=>i.own()),a=[{type:"trace",id:o[0],position:t,width:r.CW,voltage:"ground"},{type:"trace",id:o[1],position:t,width:r.W,voltage:e},{type:"trace",id:o[2],position:t,width:r.CW,voltage:"ground"}],d=a[1],h=[{left_trace:{id:o[0],attach:"right"},right_trace:{id:o[1],attach:"left"},width:r.CS},{left_trace:{id:o[1],attach:"right"},right_trace:{id:o[2],attach:"left"},width:r.CS}];return{position:t,root:d,conductors:a,spacings:h}},create_left(r,t,e){return this.create_traces(r,t,"positive",e)},create_right(r,t,e){return this.create_traces(r,t,"negative",e)}},"mirrored pair":{create_traces(r,t,e,i){const o=Array.from({length:2},n=>i.own()),a=[{type:"trace",id:o[0],position:t,width:r.W,voltage:e},{type:"trace",id:o[1],position:t,width:r.W,voltage:gt(e)}],d=a[0],h=[{left_trace:{id:o[0],attach:"right"},right_trace:{id:o[1],attach:"left"},width:r.S}];return{position:t,root:d,conductors:a,spacings:h}},create_left(r,t,e){return this.create_traces(r,t,"positive",e)},create_right(r,t,e){return this.create_traces(r,t,"negative",e)}},"coplanar mirrored pair":{create_traces(r,t,e,i){const o=Array.from({length:4},n=>i.own()),a=[{type:"trace",id:o[0],position:t,width:r.CW,voltage:"ground"},{type:"trace",id:o[1],position:t,width:r.W,voltage:e},{type:"trace",id:o[2],position:t,width:r.W,voltage:gt(e)},{type:"trace",id:o[3],position:t,width:r.CW,voltage:"ground"}],d=a[1],h=[{left_trace:{id:o[0],attach:"right"},right_trace:{id:o[1],attach:"left"},width:r.CS},{left_trace:{id:o[1],attach:"right"},right_trace:{id:o[2],attach:"left"},width:r.S},{left_trace:{id:o[2],attach:"right"},right_trace:{id:o[3],attach:"left"},width:r.CS}];return{position:t,root:d,conductors:a,spacings:h}},create_left(r,t,e){return this.create_traces(r,t,"positive",e)},create_right(r,t,e){return this.create_traces(r,t,"negative",e)}}};export{_e as B,ce as C,se as S,Ht as _,he as a,le as b,Wt as c,de as d,ue as e,pe as f,ne as g,Bt as h};
