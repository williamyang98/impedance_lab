var m=Object.defineProperty;var y=(s,e,t)=>e in s?m(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var _=(s,e,t)=>y(s,typeof e!="symbol"?e+"":e,t);import{d as $,a as z,j as E,b as d,f as k,F as h,r as p,n as w,o as g,D as x,E as I,m as F,t as U,H as b}from"./index-CWcrCmoJ.js";const j={class:"w-full flex flex-row gap-x-1 mb-1 max-w-full overflow-x-auto align-middle"},S=["onClick","aria-selected"],M=$({__name:"TabsView",props:{initial_tab:{}},setup(s,{expose:e}){const t=s,r=z(()=>{const n=I(),l=[],i=new Map;for(const o in n){let c,v;if(o.startsWith("h-"))c=o.slice(2),v="header";else if(o.startsWith("b-"))c=o.slice(2),v="body";else{console.warn(`Ignoring slot ${o} since it isn't a valid h-{...} or b-{...} tab component`);continue}let a=i.get(c);a===void 0&&(a={id:c},l.push(a),i.set(c,a)),v==="header"?(a.header_slot!==void 0&&console.warn(`Overriding existing header slot ${a.header_slot} in tab ${c} with slot ${o}`),a.header_slot=o):v==="body"&&(a.body_slot!==void 0&&console.warn(`Overriding existing header slot ${a.body_slot} in tab ${c} with slot ${o}`),a.body_slot=o)}return l});function f(){if(t.initial_tab)return t.initial_tab;if(r.value.length>0)return r.value[0].id}const u=E(f());return e({set tab(n){u.value=n},get tab(){return u.value},get tabs(){return r.value.map(n=>n.id)}}),(n,l)=>(g(),d("div",{class:w(["bg-base-200 p-1 flex flex-col h-full rounded",n.$attrs.class])},[k("div",j,[(g(!0),d(h,null,p(r.value,i=>(g(),d("button",{key:i,class:"cursor-pointer px-[1rem] py-[0.6rem] text-[0.875rem] rounded aria-selected:bg-base-100 aria-selected:shadow text-base-content/50 aria-selected:text-base-content hover:text-base-content hover:bg-base-100/75 select-none",onClick:o=>u.value=i.id,"aria-selected":u.value===i.id},[x(n.$slots,i.header_slot,{},()=>[F(U(i.id),1)])],8,S))),128))]),(g(!0),d(h,null,p(r.value,i=>(g(),d("div",{key:i,class:w([`${u.value===i.id?"":"hidden"}`,"h-full overflow-y-auto"])},[x(n.$slots,i.body_slot)],2))),128))],2))}}),V=s=>{switch(s){case"s8":return{size:1,getter:(e,t)=>e.getInt8(t),setter:(e,t,r)=>e.setInt8(t,r)};case"u8":return{size:1,getter:(e,t)=>e.getUint8(t),setter:(e,t,r)=>e.setUint8(t,r)};case"s16":return{size:2,getter:(e,t)=>e.getInt16(t,!0),setter:(e,t,r)=>e.setInt16(t,r,!0)};case"u16":return{size:2,getter:(e,t)=>e.getUint16(t,!0),setter:(e,t,r)=>e.setUint16(t,r,!0)};case"s32":return{size:4,getter:(e,t)=>e.getInt32(t,!0),setter:(e,t,r)=>e.setInt32(t,r,!0)};case"u32":return{size:4,getter:(e,t)=>e.getUint32(t,!0),setter:(e,t,r)=>e.setUint32(t,r,!0)};case"f32":return{size:4,getter:(e,t)=>e.getFloat32(t,!0),setter:(e,t,r)=>e.setFloat32(t,r,!0)};case"f64":return{size:8,getter:(e,t)=>e.getFloat64(t,!0),setter:(e,t,r)=>e.setFloat64(t,r,!0)}}};class T{constructor(e){_(this,"buffer");_(this,"view");_(this,"views");let t=0;const r={};for(const u in e){const n=e[u],l=V(n),i={offset:t,getter:l.getter,setter:l.setter};r[u]=i,t+=l.size}const f=t;this.buffer=new ArrayBuffer(f),this.view=new DataView(this.buffer),this.views=r}get(e){const t=this.views[e];return t.getter(this.view,t.offset)}set(e,t){const r=this.views[e];return r.setter(this.view,r.offset,t)}}function B(s,e){return s=Math.abs(s),e!==void 0&&s<=e?{scale:1,suffix:""}:s>=1e15?{scale:1e15,suffix:"P"}:s>=1e12?{scale:1e12,suffix:"T"}:s>=1e9?{scale:1e9,suffix:"G"}:s>=1e6?{scale:1e6,suffix:"M"}:s>=1e3?{scale:1e3,suffix:"k"}:s>=1?{scale:1,suffix:""}:s>=.001?{scale:.001,suffix:"m"}:s>=1e-6?{scale:1e-6,suffix:"Âµ"}:s>=1e-9?{scale:1e-9,suffix:"n"}:s>=1e-12?{scale:1e-12,suffix:"f"}:{scale:1,suffix:""}}function N(s,e,t,r){t=t??3;const f=B(s,r);return`${(s/f.scale).toPrecision(t)} ${f.suffix}${e??""}`}const O={get toast_manager(){const s=b("toast_manager");if(s===void 0)throw Error("Expected toast_manager to be injected from provider");return s},get gpu_device(){const s=b("gpu_device");if(s===void 0)throw Error("Expected gpu_device to be injected from provider");if(s.value===void 0)throw Error("gpu_device has not been initialised yet");return s},get gpu_adapter(){const s=b("gpu_adapter");if(s===void 0)throw Error("Expected gpu_adapter to be injected from provider");if(s.value===void 0)throw Error("gpu_adapter has not been initialised yet");return s}};export{T as S,M as _,O as p,N as w};
